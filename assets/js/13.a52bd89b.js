(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{485:function(s,t,a){s.exports=a.p+"assets/img/go-lajihuishou.890f69f3.png"},486:function(s,t,a){s.exports=a.p+"assets/img/go-gc-mark.bae1baa1.png"},487:function(s,t,a){s.exports=a.p+"assets/img/go-memory.3edd9a6d.png"},528:function(s,t,a){"use strict";a.r(t);var n=a(20),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"第四章-内存管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第四章-内存管理"}},[s._v("#")]),s._v(" 第四章 : 内存管理")]),s._v(" "),n("h2",{attrs:{id:"内存分配原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存分配原理"}},[s._v("#")]),s._v(" 内存分配原理")]),s._v(" "),n("h3",{attrs:{id:"内存分配器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存分配器"}},[s._v("#")]),s._v(" 内存分配器")]),s._v(" "),n("p",[s._v("通过 malloc 方法动态分配内存, tcmalloc 和 jemalloc 在避免内存碎片和性能上均比 glibc 有优势,多线程环境下效果更明显.go 实现自己的内存分配器,原理与 tcmalloc 类似.简单来说就是维护一大块全局内存,每个线程(go 中指 p)维护一小块小的私有内存,私有内存不足再从全局申请.")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("库")]),s._v(" "),n("th",[s._v("分配器")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("glibc")]),s._v(" "),n("td",[s._v("ptmalloc2")])]),s._v(" "),n("tr",[n("td",[s._v("googlet")]),s._v(" "),n("td",[s._v("tcmalloc")])]),s._v(" "),n("tr",[n("td",[s._v("facebook")]),s._v(" "),n("td",[s._v("jemalloc")])])])]),s._v(" "),n("p",[s._v("为了方便自主管理内存,先向系统申请一块内存,然后将内存切割成小块,通过一定的内存分配算法管理内存.")]),s._v(" "),n("p",[s._v("启动时预申请的内存划分为 spans(512M)、bitmap(16G)、arena(512G) 三部分.")]),s._v(" "),n("ol",[n("li",[s._v("arena : 即为所谓的堆区,应用中所用的内存从这里分配,其中 spans 和 bitmap 是为了管理 arena 区存在的.为了方便管理把 arena 区域划分为一个个 page,每个 page 为 8kb,一共有 512GB/8kb 个页")]),s._v(" "),n("li",[s._v("spans : 存放 span 的指针每个指针对应一个 page,所以 spans 区域的大小为 512GB / 8KB * 指针大小8byte = 512M")]),s._v(" "),n("li",[s._v("bitmap : bitmap 区域大小也是通过 arena 计算出来的,不过主要用于 GC")])]),s._v(" "),n("h3",{attrs:{id:"span"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#span"}},[s._v("#")]),s._v(" span")]),s._v(" "),n("p",[s._v("span 是管理 arena 区域页的关键数据结构,每个 span 中包含一个或多个连续页,为了满足小对象分配,span 中的一页会划分更小的粒度.而对于大对象,比如超过页大小,则通过多页实现.")]),s._v(" "),n("h3",{attrs:{id:"class"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#class"}},[s._v("#")]),s._v(" class")]),s._v(" "),n("p",[s._v("根据页大小划分了一系列 class,每个 class 都代表一个固定大小的对象,以及每个 span 的大小.")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// class  bytes/obj  bytes/span  objects  tail waste  max waste")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     1          8        8192     1024           0     87.50%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     2         16        8192      512           0     43.75%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     3         32        8192      256           0     46.88%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     4         48        8192      170          32     31.52%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     5         64        8192      128           0     23.44%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     6         80        8192      102          32     19.07%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     7         96        8192       85          32     15.95%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     8        112        8192       73          16     13.56%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     9        128        8192       64           0     11.72%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    10        144        8192       56         128     11.82%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    11        160        8192       51          32      9.73%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    12        176        8192       46          96      9.59%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    13        192        8192       42         128      9.25%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    14        208        8192       39          80      8.12%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    15        224        8192       36         128      8.15%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    16        240        8192       34          32      6.62%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    17        256        8192       32           0      5.86%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    18        288        8192       28         128     12.16%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    19        320        8192       25         192     11.80%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    20        352        8192       23          96      9.88%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    21        384        8192       21         128      9.51%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    22        416        8192       19         288     10.71%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    23        448        8192       18         128      8.37%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    24        480        8192       17          32      6.82%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    25        512        8192       16           0      6.05%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    26        576        8192       14         128     12.33%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    27        640        8192       12         512     15.48%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    28        704        8192       11         448     13.93%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    29        768        8192       10         512     13.94%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    30        896        8192        9         128     15.52%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    31       1024        8192        8           0     12.40%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    32       1152        8192        7         128     12.41%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    33       1280        8192        6         512     15.55%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    34       1408       16384       11         896     14.00%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    35       1536        8192        5         512     14.00%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    36       1792       16384        9         256     15.57%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    37       2048        8192        4           0     12.45%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    38       2304       16384        7         256     12.46%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    39       2688        8192        3         128     15.59%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    40       3072       24576        8           0     12.47%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    41       3200       16384        5         384      6.22%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    42       3456       24576        7         384      8.83%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    43       4096        8192        2           0     15.60%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    44       4864       24576        5         256     16.65%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    45       5376       16384        3         256     10.92%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    46       6144       24576        4           0     12.48%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    47       6528       32768        5         128      6.23%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    48       6784       40960        6         256      4.36%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    49       6912       49152        7         768      3.37%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    50       8192        8192        1           0     15.61%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    51       9472       57344        6         512     14.28%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    52       9728       49152        5         512      3.64%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    53      10240       40960        4           0      4.99%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    54      10880       32768        3         128      6.24%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    55      12288       24576        2           0     11.45%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    56      13568       40960        3         256      9.99%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    57      14336       57344        4           0      5.35%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    58      16384       16384        1           0     12.49%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    59      18432       73728        4           0     11.11%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    60      19072       57344        3         128      3.57%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    61      20480       40960        2           0      6.87%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    62      21760       65536        3         256      6.25%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    63      24576       24576        1           0     11.45%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    64      27264       81920        3         128     10.00%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    65      28672       57344        2           0      4.91%")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    66      32768       32768        1           0     12.50%")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br")])]),n("ol",[n("li",[s._v("class : class id,每个 span 结构中都有一个 class ID,表示该 span 可处理的对象类型")]),s._v(" "),n("li",[s._v("bytes/obj : 该 class 代表对象的字节数")]),s._v(" "),n("li",[s._v("bytes/span : 每个 span 占用堆堆字节数,即页数 * 页大小")]),s._v(" "),n("li",[s._v("objects : 每个 span 可分配的对象个数,即 (bytes/span) / (bytes/obj)")]),s._v(" "),n("li",[s._v("waste bytes : 每个 span 产生的内存碎片,即 (bytes/span) % (bytes/obj)")])]),s._v(" "),n("blockquote",[n("p",[s._v("最大的对象是 32k 大小超过 32k 由特殊的 class 表示,该 class ID 为 0,每个 class 只包含一个对象")])]),s._v(" "),n("h3",{attrs:{id:"结构体"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结构体"}},[s._v("#")]),s._v(" 结构体")]),s._v(" "),n("p",[s._v("span 是内存管理的基本单位,每个 span 用于管理特定的 class 对象,根据对象大小, span 将一个或多个页拆分成多个块进行管理.")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// runtime/mheap.go:mspan")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" mspan "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tnext "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("mspan     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// next span in list, or nil if none")]),s._v("\n\tprev "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("mspan     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// previous span in list, or nil if none")]),s._v("\n\tlist "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("mSpanList "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// For debugging. TODO: Remove.")]),s._v("\n\tstartAddr "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// address of first byte of span aka s.base()")]),s._v("\n\tnpages    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// number of pages in span")]),s._v("\n\tmanualFreeList gclinkptr "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// list of free objects in mSpanManual spans")]),s._v("\n\tfreeindex "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v("\n\tnelems "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// number of object in the span.")]),s._v("\n\tallocCache "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v("\n\tallocBits  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("gcBits\n\tgcmarkBits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("gcBits\n\tsweepgen    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint32")]),s._v("\n\tdivMul      "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint16")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// for divide by elemsize - divMagic.mul")]),s._v("\n\tbaseMask    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint16")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// if non-0, elemsize is a power of 2, & this will get object allocation base")]),s._v("\n\tallocCount  "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint16")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// number of allocated objects")]),s._v("\n\tspanclass   spanClass     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// size class and noscan (uint8)")]),s._v("\n\tstate       mSpanStateBox "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// mSpanInUse etc; accessed atomically (get/set methods)")]),s._v("\n\tneedzero    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint8")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// needs to be zeroed before allocation")]),s._v("\n\tdivShift    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint8")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// for divide by elemsize - divMagic.shift")]),s._v("\n\tdivShift2   "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint8")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// for divide by elemsize - divMagic.shift2")]),s._v("\n\telemsize    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// computed from sizeclass or from npages")]),s._v("\n\tlimit       "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// end of data in span")]),s._v("\n\tspeciallock mutex         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// guards specials list")]),s._v("\n\tspecials    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("special      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// linked list of special records sorted by offset.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("ol",[n("li",[s._v("next : 链表的后向指针,用于将 span 连接起来")]),s._v(" "),n("li",[s._v("prev : 链表的前向指针,用于将 span 连接起来")]),s._v(" "),n("li",[s._v("startAddr : 起始地址,所管理页的地址")]),s._v(" "),n("li",[s._v("npages : 管理的页数")]),s._v(" "),n("li",[s._v("nelems : 块个数,多少个块可供分配")]),s._v(" "),n("li",[s._v("allocBits : 分配位图,每一个位代表一个块是否已分配")]),s._v(" "),n("li",[s._v("allocCount : 已分配块的个数")]),s._v(" "),n("li",[s._v("spanclass : class ID")]),s._v(" "),n("li",[s._v("elemsize : class 表中对象大小,即块大小")])]),s._v(" "),n("h3",{attrs:{id:"mcache"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mcache"}},[s._v("#")]),s._v(" mcache")]),s._v(" "),n("p",[s._v("有了管理内存的基本单位,还有个数据结构来管理 span, 即 mcentral,各线程需要内存时从 mcentral 管理的 span 中申请内存,为了避免多线程申请内存时不断加锁,为每个线程分配了 span 的缓存,即 mcache")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// runtime/mcache.go:mcache")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" mcache "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tnext_sample "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// trigger heap sample after allocating this many bytes")]),s._v("\n\tlocal_scan  "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// bytes of scannable heap allocated")]),s._v("\n\ttiny             "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v("\n\ttinyoffset       "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v("\n\tlocal_tinyallocs "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// number of tiny allocs not counted in other stats")]),s._v("\n\talloc "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("numSpanClasses"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("mspan "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// spans to allocate from, indexed by spanClass")]),s._v("\n\tstackcache "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("_NumStackOrders"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("stackfreelist\n\tlocal_largefree  "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// bytes freed for large objects (>maxsmallsize)")]),s._v("\n\tlocal_nlargefree "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// number of frees for large objects (>maxsmallsize)")]),s._v("\n\tlocal_nsmallfree "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("_NumSizeClasses"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// number of frees for small objects (<=maxsmallsize)")]),s._v("\n\tflushGen "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint32")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("ol",[n("li",[s._v("alloc [67 * 2 ]*mspan : 为 mspan 的指针数组,数组大小为 class 大小的 2 倍,数组中每个元素代表一种 class 的 span 列表,每种 class 类型都有两组 span 列表,第一组列表中所表示的对象包含了指针,第二组列表中所包含的对象不包含指针,这样做是为了提高 gc 扫描性能,对于不包含指针的 span 列表,没必要扫描")]),s._v(" "),n("li",[s._v("根据对象是否包含指针,将对象分为 noscan 和 scan 两类,其中 nospan 代表没有指针,而 scan 代表有指针,需要 gc 进行扫描")]),s._v(" "),n("li",[s._v("mcache 在初始化时没有任何 span 的,在使用过程中会动态的从 mcentral 中获取并缓存下来,根据使用情况,每种 class 的 span 个数页不相同,哪类 class 占的多说明该线程分配的这一大小的对象较多")])]),s._v(" "),n("h3",{attrs:{id:"central"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#central"}},[s._v("#")]),s._v(" central")]),s._v(" "),n("p",[s._v("cache 作为线程的私有资源为单个线程服务,而 central 则是全局资源,为多个线程服务,当某个线程内存不足时会向 central 申请,当某个线程释放内存时又会回收进 central.")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// runtime/mcentral.go:mcentral")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" mcentral "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tlock      mutex\n\tspanclass spanClass\n\tnonempty  mSpanList "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// list of spans with a free object, ie a nonempty free list")]),s._v("\n\tempty     mSpanList "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// list of spans with no free objects (or cached in an mcache)")]),s._v("\n\tnmalloc "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("ol",[n("li",[s._v("lock : 线程之间互斥锁,防止多线程读写冲突")]),s._v(" "),n("li",[s._v("spanclass : 每个 mcentral 管理着一组有相同 class 多列表")]),s._v(" "),n("li",[s._v("nonempty : 还有空闲块的 span 列表,还有内存可用的 span 列表")]),s._v(" "),n("li",[s._v("nonempty : 没有空闲块可用的 span 列表")]),s._v(" "),n("li",[s._v("nmalloc : 累计分配的对象个数")])]),s._v(" "),n("h4",{attrs:{id:"线程从-central-获取-span"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程从-central-获取-span"}},[s._v("#")]),s._v(" 线程从 central 获取 span")]),s._v(" "),n("ol",[n("li",[s._v("加锁")]),s._v(" "),n("li",[s._v("从 nonempty 列表获取一个可用 span,并将其从链表中删除")]),s._v(" "),n("li",[s._v("将取出的 span 放入 empty 链表")]),s._v(" "),n("li",[s._v("将 span 返还给线程")]),s._v(" "),n("li",[s._v("解锁")]),s._v(" "),n("li",[s._v("线程将 span 缓存进 cache")])]),s._v(" "),n("h4",{attrs:{id:"线程将-span-归还"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程将-span-归还"}},[s._v("#")]),s._v(" 线程将 span 归还")]),s._v(" "),n("ol",[n("li",[s._v("加锁")]),s._v(" "),n("li",[s._v("将 span 从 empty 链表删除")]),s._v(" "),n("li",[s._v("将 span 加入 nonempty 列表")]),s._v(" "),n("li",[s._v("解锁")])]),s._v(" "),n("h3",{attrs:{id:"heap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#heap"}},[s._v("#")]),s._v(" heap")]),s._v(" "),n("p",[s._v("每个 mcentral 对象只管理特定 class 规格的 span,事实上每种 class 都对应一个 mcentral,这个 mcentral 集合存放在 mheap 中.")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// runtime/mheap.go:mheap")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" mheap "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tlock      mutex\n\tpages     pageAlloc "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// page allocation data structure")]),s._v("\n\tsweepgen  "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint32")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sweep generation, see comment in mspan; written during STW")]),s._v("\n\tsweepdone "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint32")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// all spans are swept")]),s._v("\n\tsweepers  "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint32")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// number of active sweepone calls")]),s._v("\n\tallspans "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("mspan "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// all spans out there")]),s._v("\n\tsweepSpans "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("gcSweepBuf\n\tpagesInUse         "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// pages of spans in stats mSpanInUse; updated atomically")]),s._v("\n\tpagesSwept         "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// pages swept this cycle; updated atomically")]),s._v("\n\tpagesSweptBasis    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// pagesSwept to use as the origin of the sweep ratio; updated atomically")]),s._v("\n\tsweepHeapLiveBasis "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// value of heap_live to use as the origin of sweep ratio; written with lock, read without")]),s._v("\n\tsweepPagesPerByte  "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float64")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// proportional sweep ratio; written with lock, read without")]),s._v("\n\tscavengeGoal "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v("\n\treclaimIndex "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v("\n\treclaimCredit "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v("\n\tlargealloc  "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// bytes allocated for large objects")]),s._v("\n\tnlargealloc "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// number of large object allocations")]),s._v("\n\tlargefree   "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// bytes freed for large objects (>maxsmallsize)")]),s._v("\n\tnlargefree  "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// number of frees for large objects (>maxsmallsize)")]),s._v("\n\tnsmallfree  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("_NumSizeClasses"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// number of frees for small objects (<=maxsmallsize)")]),s._v("\n\tarenas "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" arenaL1Bits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" arenaL2Bits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("heapArena\n\theapArenaAlloc linearAlloc\n\tarenaHints "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("arenaHint\n\tarena linearAlloc\n\tallArenas "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("arenaIdx\n\tsweepArenas "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("arenaIdx\n\tcurArena "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tbase"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" end "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint32")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ensure 64-bit alignment of central")]),s._v("\n\tcentral "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("numSpanClasses"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tmcentral mcentral\n\t\tpad      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cpu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CacheLinePadSize "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" unsafe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mcentral"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("cpu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CacheLinePadSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("byte")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\tspanalloc             fixalloc "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// allocator for span*")]),s._v("\n\tcachealloc            fixalloc "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// allocator for mcache*")]),s._v("\n\tspecialfinalizeralloc fixalloc "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// allocator for specialfinalizer*")]),s._v("\n\tspecialprofilealloc   fixalloc "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// allocator for specialprofile*")]),s._v("\n\tspeciallock           mutex    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// lock for special record allocators.")]),s._v("\n\tarenaHintAlloc        fixalloc "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// allocator for arenaHints")]),s._v("\n\tunused "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("specialfinalizer "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// never set, just here to force the specialfinalizer type into DWARF")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br")])]),n("ol",[n("li",[s._v("lock : 互斥锁")]),s._v(" "),n("li",[s._v("spans : 指向 spans 区域,用于映射 span 和 page 的关系")]),s._v(" "),n("li",[s._v("bitmap : bitmap 的起始地址, bitmap 从高地址向低地址增长")])]),s._v(" "),n("p",[s._v("mheap 管理着全部内存,实际通过一个 mheap 全局变量进行内存管理的.")]),s._v(" "),n("h3",{attrs:{id:"内存分配过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存分配过程"}},[s._v("#")]),s._v(" 内存分配过程")]),s._v(" "),n("p",[s._v("针对待分配对象大小有不同的分配逻辑")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("大小")]),s._v(" "),n("th",[s._v("分配")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("(  0 , 16B ) 且不包含指针的对象")]),s._v(" "),n("td",[s._v("tiny 分配")])]),s._v(" "),n("tr",[n("td",[s._v("(  0 , 16B ) 包含指针对象")]),s._v(" "),n("td",[s._v("正常分配")])]),s._v(" "),n("tr",[n("td",[s._v("[ 16B , 32KB ]")]),s._v(" "),n("td",[s._v("正常分配")])]),s._v(" "),n("tr",[n("td",[s._v("( 32KB , - )")]),s._v(" "),n("td",[s._v("大对象分配")])])])]),s._v(" "),n("ol",[n("li",[s._v("获取当前线程的私有缓存 cache")]),s._v(" "),n("li",[s._v("根据 size 计算出合适的 class 的 ID")]),s._v(" "),n("li",[s._v("从 mcache 的 alloc[class] 链表中查询可用的 span")]),s._v(" "),n("li",[s._v("如果 mcache 没有可用的 span,则从 mcentral 申请一个新的 span 加入 mcache 中")]),s._v(" "),n("li",[s._v("如果 mcentral 也没有可用的 span,则从 mheap 申请一个新的 span 加入 mcentral 中")]),s._v(" "),n("li",[s._v("从该 span 中获取到空闲对象地址并返回")])]),s._v(" "),n("h3",{attrs:{id:"小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),n("ol",[n("li",[s._v("启动时申请一个大内存划分为 spans、bitmap、arena 区域")]),s._v(" "),n("li",[s._v("arena 按页划分成一个个小块")]),s._v(" "),n("li",[s._v("span 管理一个或多个页")]),s._v(" "),n("li",[s._v("mcentral 管理多个 span 供线程申请使用")]),s._v(" "),n("li",[s._v("mcache 作为线程私有资源,资源来源于 mcentral")])]),s._v(" "),n("h2",{attrs:{id:"垃圾回收原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收原理"}},[s._v("#")]),s._v(" 垃圾回收原理")]),s._v(" "),n("h3",{attrs:{id:"垃圾回收算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收算法"}},[s._v("#")]),s._v(" 垃圾回收算法")]),s._v(" "),n("ol",[n("li",[s._v("引用计数 : 对每个对象维护一个引用计数,当引用该对象的对象销毁时引用计数减 1,当引用计数为 0 时回收该对象,优点 : 对象可以很快的被回收,不会出现内存耗尽达到某个阀值才回收.缺点 : 不能很好的处理循环引用,而且实时维护引用计数消耗性能")]),s._v(" "),n("li",[s._v("标记-清除 : 从根变量开始遍历所有引用的对象引用的对象被标记为被引用,没有被标记的进行回收.优点 : 解决引用计数的缺点. 缺点 : 需要 STW(暂时停掉程序运行)")]),s._v(" "),n("li",[s._v("分代收集 : 按照对象生命周期长短,划分不同的代空间,生命周期长的放入老年代,短的放入新生代,不同代有不同回收算法和回收频率.优点 : 回收性能好.缺点 : 算法复杂")])]),s._v(" "),n("h3",{attrs:{id:"垃圾回收"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收"}},[s._v("#")]),s._v(" 垃圾回收")]),s._v(" "),n("p",[s._v("垃圾回收的目标就是把那些已经分配的但没有对象引用的内存找出来并回收掉.")]),s._v(" "),n("p",[n("img",{attrs:{src:a(485),alt:"go-lajihuishou"}})]),s._v(" "),n("h3",{attrs:{id:"内存标记"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存标记"}},[s._v("#")]),s._v(" 内存标记")]),s._v(" "),n("p",[n("img",{attrs:{src:a(486),alt:"go-gc-mark"}})]),s._v(" "),n("p",[s._v("span 中维护一个个内存块,并用一个位图 allocBits 表示内存块的分配情况,在 span 结构体中还有另一个位图 gcmarkBits 用于标记内存块被引用的情况,标记阶段对每块内存进行标记有对象引用的内存标记为 1,没有引用到的保持默认 0.标记结束就是内存回收,回收时将 allocBits 指向 gcmarkBits,代表标记过的才是存活的, gcmarkBits 会在下次标记时重新分配内存.")]),s._v(" "),n("h3",{attrs:{id:"三色标记法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三色标记法"}},[s._v("#")]),s._v(" 三色标记法")]),s._v(" "),n("p",[s._v("前面介绍了对象标记状态的存储方式,还需要一个标记队列来存放待标记的对象.可以简单的想象成把对象从标记队列中取出将对象的引用状态标记在 span 的 gcmarkBits,把对象引用到的其它对象再放入到队列中.")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("颜色")]),s._v(" "),n("th",[s._v("描述")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("灰色")]),s._v(" "),n("td",[s._v("对象还在标记队列中等待")])]),s._v(" "),n("tr",[n("td",[s._v("黑色")]),s._v(" "),n("td",[s._v("对象已被标记, gcmarkBits 对应的位为 1 (该对象不会在本次 gc 中被清理)")])]),s._v(" "),n("tr",[n("td",[s._v("白色")]),s._v(" "),n("td",[s._v("对象未被标记, gcmarkBits 对应的位为 0 (该对象将会在本次 gc 中被清理)")])])])]),s._v(" "),n("h3",{attrs:{id:"垃圾回收优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收优化"}},[s._v("#")]),s._v(" 垃圾回收优化")]),s._v(" "),n("h4",{attrs:{id:"写屏障"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#写屏障"}},[s._v("#")]),s._v(" 写屏障")]),s._v(" "),n("p",[s._v("stw 防止 gc 扫描时内存变化而停掉 goroutine,而写屏障就是让 goroutine 与 gc 同时运行的手段,虽然写屏障不能完全消除 stw,但可以减少 stw 的时间.写屏障类似一种开关,在 gc 特定时机开启,开启后指针传递时会把指针标记,即本轮不回收下次 gc 时再确定. gc 过程中新分配的内存会被立即标记,用的并不是写屏障技术,即 gc 过程中新分配的内存不会在本轮 gc 中回收.")]),s._v(" "),n("h4",{attrs:{id:"辅助-gc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#辅助-gc"}},[s._v("#")]),s._v(" 辅助 GC")]),s._v(" "),n("p",[s._v("为防止内存分配过快在 gc 执行过程中,如果 goroutine 需要分配内存那么这个 goroutine 会参与参与一部分 gc 工作,即帮助 gc 做一部分工作,这个机制叫做 mutator assist.")]),s._v(" "),n("h3",{attrs:{id:"垃圾回收触发时机"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收触发时机"}},[s._v("#")]),s._v(" 垃圾回收触发时机")]),s._v(" "),n("h4",{attrs:{id:"内存分配量达到阀值触发-gc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存分配量达到阀值触发-gc"}},[s._v("#")]),s._v(" 内存分配量达到阀值触发 gc")]),s._v(" "),n("p",[s._v("第一个指标关注堆内存增长.")]),s._v(" "),n("p",[s._v("每次内存分配时都会检查当前内存分配量是否已经到达阀值,如果到达阀值则立即启动 gc.")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("阀值 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 上次 gc 内存分配量 * 内存增长率\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("内存增长率由环境变量"),n("code",[s._v("GOGC")]),s._v("控制,默认为 100,即每当内存扩大一倍时启动 gc.gc 关注堆的增长,默认情况下在堆大小加倍时运行.")]),s._v(" "),n("h4",{attrs:{id:"定期触发-gc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定期触发-gc"}},[s._v("#")]),s._v(" 定期触发 gc")]),s._v(" "),n("p",[s._v("第二个指标关注两次 gc 时间间隔.默认情况下最长 2 分钟触发一次 gc.")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// runtime/proc.go:forcegcperiod")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" forcegcperiod "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int64")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1e9")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"手动触发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手动触发"}},[s._v("#")]),s._v(" 手动触发")]),s._v(" "),n("p",[s._v("程序代码中可以使用"),n("code",[s._v("runtime.GC()")]),s._v("来手动触发 gc,主要用于 gc 性能测试和统计.")]),s._v(" "),n("h3",{attrs:{id:"gc-性能优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gc-性能优化"}},[s._v("#")]),s._v(" gc 性能优化")]),s._v(" "),n("p",[s._v("gc 性能与对象数量负相关,对象越多 gc 性能越差,对程序影响越大.所以 gc 性能优化的思路之一就是减少对象分配个数,比如对象复用或使用大对象组合多个小对象.另外由于内存逃逸现象有些隐式的内存分配也会产生,也有可能成为 gc 的负担.")]),s._v(" "),n("h3",{attrs:{id:"gc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gc"}},[s._v("#")]),s._v(" gc")]),s._v(" "),n("p",[s._v("被标记为 gc dedicated 的 goroutine 会运行标记,并不会被抢占,标记为 gc idle 的 goroutine 会去工作,因为他们没事情可做,可以被抢占.")]),s._v(" "),n("h2",{attrs:{id:"逃逸分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#逃逸分析"}},[s._v("#")]),s._v(" 逃逸分析")]),s._v(" "),n("h3",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),n("p",[s._v("指由编译器决定内存分配的位置,不需要程序员指定,函数中申请一个新的对象")]),s._v(" "),n("ol",[n("li",[s._v("如果分配在栈中,则函数执行结束可自动将内存回收")]),s._v(" "),n("li",[s._v("如果分配在堆中,则函数执行结束可交给 gc 处理")])]),s._v(" "),n("p",[s._v("有了逃逸分析返回函数局部变量成为了可能.通过编译参数"),n("code",[s._v("-gcflag=-m")]),s._v("可以查看编译过程中的逃逸分析.")]),s._v(" "),n("h3",{attrs:{id:"逃逸策略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#逃逸策略"}},[s._v("#")]),s._v(" 逃逸策略")]),s._v(" "),n("p",[s._v("每当函数中申请新的对象,编译器会根据该对象是否被函数外部引用来决定是否逃逸")]),s._v(" "),n("ol",[n("li",[s._v("如果函数外部没有引用,则优先放到栈中")]),s._v(" "),n("li",[s._v("如果函数外部存在引用,则必定放到堆中")])]),s._v(" "),n("blockquote",[n("p",[s._v("对于函数外部没有引用的对象,也有可能放大堆中,比如内存过大,超过栈的存储能力")])]),s._v(" "),n("h3",{attrs:{id:"逃逸场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#逃逸场景"}},[s._v("#")]),s._v(" 逃逸场景")]),s._v(" "),n("h4",{attrs:{id:"指针逃逸-返回局部变量指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指针逃逸-返回局部变量指针"}},[s._v("#")]),s._v(" 指针逃逸-返回局部变量指针")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Student "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tName "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n\tAge  "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("StudentRegister")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("Student "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Student"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//局部变量s逃逸到堆")]),s._v("\n\ts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n\ts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Age "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" age\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" s\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("StudentRegister")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jim"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h4",{attrs:{id:"栈空间不足逃逸"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#栈空间不足逃逸"}},[s._v("#")]),s._v(" 栈空间不足逃逸")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 切片长度扩大 10 会发生逃逸")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v(" s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\ts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" index\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("当栈空间不足以存放当前对象时或无法判断当前切片长度时会将对象分配到堆中.")]),s._v(" "),n("h4",{attrs:{id:"动态类型逃逸"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#动态类型逃逸"}},[s._v("#")]),s._v(" 动态类型逃逸")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Escape"')]),s._v("\n\tfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("很多函数参数类型为 interface 类型,比如"),n("code",[s._v("fmt.Println(a ...interface{})")]),s._v(",编译期间很难确定其参数具体类型,也会发生逃逸.")]),s._v(" "),n("h4",{attrs:{id:"闭包引用对象逃逸"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包引用对象逃逸"}},[s._v("#")]),s._v(" 闭包引用对象逃逸")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Fibonacci")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\ta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\ta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("b "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 原本属于局部变量的 a,b 由于闭包的引用,不得不放在堆上,产生逃逸")]),s._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tf "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Fibonacci")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fibonacci: %d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"小结-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结-2"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),n("ol",[n("li",[s._v("栈上分配内存比在堆上分配内存效率高")]),s._v(" "),n("li",[s._v("栈上分配内存不需要 gc 处理")]),s._v(" "),n("li",[s._v("堆上分配的内存使用完毕会交给 gc 处理")]),s._v(" "),n("li",[s._v("逃逸分析是决定内存分配地址是栈上还是堆上")]),s._v(" "),n("li",[s._v("逃逸分析在编译阶段完成")])]),s._v(" "),n("h3",{attrs:{id:"传递指针效率不一定高"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#传递指针效率不一定高"}},[s._v("#")]),s._v(" 传递指针效率不一定高")]),s._v(" "),n("p",[s._v("传递指针可以减少底层值的拷贝,可以提高效率,但是如果拷贝的数量小,由于指针传递会产生逃逸,可能会使用堆而增加 gc 负担,所以传递指针不一定是高效的.")]),s._v(" "),n("h3",{attrs:{id:"例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[s._v("#")]),s._v(" 例子")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// go tool compile "-m" main.go 逃逸分析命令')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// go tool compile -S main.go   获得汇编代码可以明确展示分配细节")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" small "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\ta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int64")]),s._v("\n\tc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" d "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float64")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("smallAllocation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 禁止内联 : 避免内联通过移除函数的方式优化代码")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//go:noinline")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("smallAllocation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("small "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("small"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[n("code",[s._v("runtime.newobject")]),s._v("用于新对象分配,以及代理"),n("code",[s._v("mallocgc")]),s._v("的内置函数该函数在堆上管理内存,分两种策略,一种用于小对象内存空间分配,一种用于较大的内存空间分配.")]),s._v(" "),n("h4",{attrs:{id:"较小内存空间分配"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#较小内存空间分配"}},[s._v("#")]),s._v(" 较小内存空间分配")]),s._v(" "),n("p",[s._v("对于小于 32kb 的,会从 mcache 本地缓存中尝试获取,这个缓存持有一个 mspan 的内存块(span, 32kb 大小的内存块),mspan 包含可用于分配的内存.每个 M 被分配一个 P,最多处理一个 goroutine,分配内存时,当前 goroutine 会使用当前的 p 的本地缓存,在 span 链表里寻找第一个可用空闲对象,使用这种本地缓存不需要锁操作.")]),s._v(" "),n("p",[s._v("span 链表被划分为 8 字节到 32k 字节大小,约 70 个大小等级,每个等级可以存储不同大小的对象.每个 span 链表会存两份,一本链表用于不包含指针的对象,另一个用于包含指针的对象, gc 时可以不扫描不包含指针的 span.如果 span 没有空闲插槽,会从 mcentral 的链表,维护着包含空闲对象 span 和没有空闲对象的 span 的链表 mcentral 的中央双向链表,非空链表可能包含正在使用的内存, 从 mcental 获取新的 span, 新的 span 会从堆上分配,并连接到 mcentral 上.堆会在需要时从系统获取内存.堆会分配一个 arena 大内存块供使用.")]),s._v(" "),n("h4",{attrs:{id:"较大内存空间分配"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#较大内存空间分配"}},[s._v("#")]),s._v(" 较大内存空间分配")]),s._v(" "),n("p",[s._v("对于大于 32kb 的会向上取整到页的大小,并直接从堆上分配.")]),s._v(" "),n("h2",{attrs:{id:"内存分配全景图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存分配全景图"}},[s._v("#")]),s._v(" 内存分配全景图")]),s._v(" "),n("p",[n("img",{attrs:{src:a(487),alt:"go-memory"}})]),s._v(" "),n("h4",{attrs:{id:"_32-64-位"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_32-64-位"}},[s._v("#")]),s._v(" 32 & 64 位")]),s._v(" "),n("p",[s._v("地址总线宽度为32或64,即可寻址范围,32位可寻址范围是4GB.")])])}),[],!1,null,null,null);t.default=e.exports}}]);