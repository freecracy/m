(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{432:function(a,t,_){a.exports=_.p+"assets/img/shiwuxiaoxidefenbushishiwu.1f0eadd4.png"},433:function(a,t,_){a.exports=_.p+"assets/img/bendixiaoxifenbushishiwu.c68a9fcf.png"},434:function(a,t,_){a.exports=_.p+"assets/img/Saga.62c8da7e.png"},586:function(a,t,_){"use strict";_.r(t);var v=_(20),s=Object(v.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"分布式事务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分布式事务"}},[a._v("#")]),a._v(" 分布式事务")]),a._v(" "),v("p",[a._v("分布式事务就是一个请求涉及多个存储系统(DB(本地事务)、Cache(事务、lua)、MQ(RockketMQ)、ES(Retry、日志)、下游接口),就需要多个本地事务组合成一个事务.长事务拆分小事务,如果失败正向补偿(重试)、逆向补偿(回滚已执行的小事务)")]),a._v(" "),v("h2",{attrs:{id:"cap"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cap"}},[a._v("#")]),a._v(" Cap")]),a._v(" "),v("h2",{attrs:{id:"base"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#base"}},[a._v("#")]),a._v(" Base")]),a._v(" "),v("h2",{attrs:{id:"xa协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xa协议"}},[a._v("#")]),a._v(" XA协议")]),a._v(" "),v("h2",{attrs:{id:"_2pc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2pc"}},[a._v("#")]),a._v(" 2PC")]),a._v(" "),v("p",[a._v("第一阶段提交会锁定资源.只有协调者有超时,规定时间内没有收到参与者的响应根据当前状态提交或终止事务.")]),a._v(" "),v("p",[a._v("属于强一致性事务.")]),a._v(" "),v("h2",{attrs:{id:"_3pc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3pc"}},[a._v("#")]),a._v(" 3PC")]),a._v(" "),v("p",[a._v("协调者和参与者都有超时机制.")]),a._v(" "),v("p",[a._v("属于强一致性事务.")]),a._v(" "),v("h2",{attrs:{id:"tcc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcc"}},[a._v("#")]),a._v(" TCC")]),a._v(" "),v("h2",{attrs:{id:"saga"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#saga"}},[a._v("#")]),a._v(" SAGA")]),a._v(" "),v("h2",{attrs:{id:"事务消息"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事务消息"}},[a._v("#")]),a._v(" 事务消息")]),a._v(" "),v("p",[a._v("属于最终一致性事务.消息投递的可靠性和下游消费失败不断重试")]),a._v(" "),v("h2",{attrs:{id:"本地消息表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#本地消息表"}},[a._v("#")]),a._v(" 本地消息表")]),a._v(" "),v("p",[a._v("最终一致性事务.")]),a._v(" "),v("h2",{attrs:{id:"实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[a._v("#")]),a._v(" 实现")]),a._v(" "),v("h3",{attrs:{id:"seata"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#seata"}},[a._v("#")]),a._v(" seata")]),a._v(" "),v("p",[a._v("指事务发起者、事务参与者、事务协调者、数据资源服务器位于分布式系统的不同节点.")]),a._v(" "),v("ol",[v("li",[a._v("跨数据库分布式事务")]),a._v(" "),v("li",[a._v("跨服务分布式事务")]),a._v(" "),v("li",[a._v("混合分布式事务")])]),a._v(" "),v("h3",{attrs:{id:"_2pc-xa-3pc-tcc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2pc-xa-3pc-tcc"}},[a._v("#")]),a._v(" 2PC(XA) & 3PC & TCC")]),a._v(" "),v("table",[v("thead",[v("tr",[v("th",[a._v("事务")]),a._v(" "),v("th",[a._v("实现")])])]),a._v(" "),v("tbody",[v("tr",[v("td",[a._v("2PC")]),a._v(" "),v("td",[a._v("预备阶段(预留资源,资源加锁,执行,但是不提交,redo log、undolog写入)、提交回滚阶段(记录commit或abort日志,发送提交回滚指令)")])]),a._v(" "),v("tr",[v("td",[a._v("TCC")]),a._v(" "),v("td",[a._v("也是两阶段提交协议,但是不会长时间持有资源锁,会一直失败重试")])]),a._v(" "),v("tr",[v("td",[a._v("saga模式")]),a._v(" "),v("td",[a._v("分布式事务的一种,阿里的 seata 和华为的 serviceComb 都支持该模式")])])])]),a._v(" "),v("h3",{attrs:{id:"raft"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#raft"}},[a._v("#")]),a._v(" raft")]),a._v(" "),v("h3",{attrs:{id:"基于消息的分布式事务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基于消息的分布式事务"}},[a._v("#")]),a._v(" 基于消息的分布式事务")]),a._v(" "),v("p",[a._v("主要问题是本地事务和消息发送的一致性问题.")]),a._v(" "),v("ol",[v("li",[a._v("基于事务消息 : 事务消息和普通消息的区别在事务消息发送后处于 prepare 状态,不能被订阅者消费,等到事务消息状态更改为可消费后,下游才可以监听到此消息.")]),a._v(" "),v("li",[a._v("基于本地消息")])]),a._v(" "),v("h4",{attrs:{id:"事务消息-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事务消息-2"}},[a._v("#")]),a._v(" 事务消息")]),a._v(" "),v("ol",[v("li",[a._v("事务发起者发送一个事务消息")]),a._v(" "),v("li",[a._v("MQ 收到消息后将消息持久化,状态是待发送,并给发送者一个 ack")]),a._v(" "),v("li",[a._v("事务发起者如果没有收到 ack ,则取消本地事务的执行,如果收到执行本地事务并给MQ发送一个消息,通知本地事务执行情况")]),a._v(" "),v("li",[a._v("MQ 收到通知后根据本地事务执行情况更改事务消息状态,如果是执行成功则消息改为可消费,并下发给订阅者,如果事务执行失败者删除该事务消息")]),a._v(" "),v("li",[a._v("本地事务执行完毕,发送给 MQ 的通知可能丢失,所以支持事务消息的 MQ 有一个定时扫描逻辑,扫描状态仍是待发送的向消息发送方发起询问,询问这条事务最终状态,并更新本地事务消息状态.事务发起方需要给 MQ 一个事务消息状态查询接口.")]),a._v(" "),v("li",[a._v("如果事务消息状态是可发送,则 MQ 向下游参与者推送消息,推送失败不停重试.")]),a._v(" "),v("li",[a._v("下游参与者收到消息后,执行本地事务,本地事务如果执行成功,则给MQ发送 ack,如果执行失败,则不发送 ack,MQ 会持续推送消息.")])]),a._v(" "),v("p",[v("img",{attrs:{src:_(432),alt:"shiwuxiaoxidefenbushishiwu"}})]),a._v(" "),v("blockquote",[v("p",[a._v("需要 MQ 支持事务消息, RocketMQ 支持事务消息.")])]),a._v(" "),v("h4",{attrs:{id:"本地消息"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#本地消息"}},[a._v("#")]),a._v(" 本地消息")]),a._v(" "),v("p",[a._v("事务发起方维护一个本地消息表,业务执行和本地消息表的执行在同一个本地消息表中,业务执行成功,则同时记录一条待发送状态的消息到本地消息表,系统启动一个定时任务扫描本地消息表状态为待发送的记录并将其发送到MQ系统,如果发送失败或超时则一直发送,如果发送成功从本地消息表中删除,后续消费流程和基于事务消息的模式相同.")]),a._v(" "),v("p",[v("img",{attrs:{src:_(433),alt:"bendixiaoxifenbushishiwu"}})]),a._v(" "),v("h3",{attrs:{id:"最大努力通知型分布式事务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#最大努力通知型分布式事务"}},[a._v("#")]),a._v(" 最大努力通知型分布式事务")]),a._v(" "),v("ol",[v("li",[a._v("业务主动方在完成处理后向业务被动方发送通知消息,允许存在消息丢失")]),a._v(" "),v("li",[a._v("业务主动方提供递增多档位时间间隔(5min,10min,30min,1h,24h),用于失败重试调用业务被动方接口,在通知N次后不再通知,报警 + 记日志 + 人工介入")]),a._v(" "),v("li",[a._v("业务被动方提供幂等的服务接口,防止通知重复消息")]),a._v(" "),v("li",[a._v("业务主动方需要定期校验机制,对业务数据兜底,防止业务被动方无法履行职责时进行业务回滚,确保数据最终一致性")])]),a._v(" "),v("h4",{attrs:{id:"最大努力通知-vs-事务消息"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#最大努力通知-vs-事务消息"}},[a._v("#")]),a._v(" 最大努力通知 VS 事务消息")]),a._v(" "),v("ol",[v("li",[a._v("参与者 : 最大努力通知用于跨企业间业务交互,事务消息更适用于网络体系的内部服务交付")]),a._v(" "),v("li",[a._v("消息层面 : 最大努力通知事务需要主动推送并提供多档次时间的重试机制保证数据通知.事务消息只需要消费者主动去消费")]),a._v(" "),v("li",[a._v("数据层面 : 最大努力通知事务需要额外定期校验机制对数据兜底,保证一致性,事务消息保证消息可靠投递即可,自身无需对数据兜底处理")])]),a._v(" "),v("h2",{attrs:{id:"seata-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#seata-2"}},[a._v("#")]),a._v(" seata")]),a._v(" "),v("h3",{attrs:{id:"at模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#at模式"}},[a._v("#")]),a._v(" AT模式")]),a._v(" "),v("h3",{attrs:{id:"xa模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xa模式"}},[a._v("#")]),a._v(" XA模式")]),a._v(" "),v("h3",{attrs:{id:"tcc模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcc模式"}},[a._v("#")]),a._v(" TCC模式")]),a._v(" "),v("h3",{attrs:{id:"saga模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#saga模式"}},[a._v("#")]),a._v(" SAGA模式")]),a._v(" "),v("p",[a._v("事务链中的每一个正向事务操作都对应一个可逆的事务操作,Sage事务协调器负责按照顺序事务链中的分支事务,分支事务执行完毕,释放资源,如果分支事务释放失败,则按照反方向执行事务补偿操作.")]),a._v(" "),v("p",[v("img",{attrs:{src:_(434),alt:"Saga"}})]),a._v(" "),v("table",[v("thead",[v("tr",[v("th",[a._v("管理器")]),a._v(" "),v("th",[a._v("作用")])])]),a._v(" "),v("tbody",[v("tr",[v("td",[a._v("RM")]),a._v(" "),v("td",[a._v("资源管理器,数据资源操作、管理接口、保证数据一致性、完整性")])]),a._v(" "),v("tr",[v("td",[a._v("TM")]),a._v(" "),v("td",[a._v("事务管理器,")])]),a._v(" "),v("tr",[v("td",[a._v("AP")]),a._v(" "),v("td",[a._v("应用程序")])]),a._v(" "),v("tr",[v("td",[a._v("CRMs")]),a._v(" "),v("td",[a._v("用来跨服务的事务传播")])])])]),a._v(" "),v("table",[v("thead",[v("tr",[v("th",[a._v("组件")]),a._v(" "),v("th",[a._v("作用")])])]),a._v(" "),v("tbody",[v("tr",[v("td",[a._v("LockManager")]),a._v(" "),v("td",[a._v("AT 模式时,将分支数据库未提交或回滚的数据锁到 TC,保证事务数据隔离")])]),a._v(" "),v("tr",[v("td",[a._v("SessionManager")]),a._v(" "),v("td",[a._v("记录事务执行状态,持久化数据,")])]),a._v(" "),v("tr",[v("td"),a._v(" "),v("td")])])]),a._v(" "),v("h2",{attrs:{id:"_2pc问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2pc问题"}},[a._v("#")]),a._v(" 2PC问题")]),a._v(" "),v("ol",[v("li",[a._v("网络 : 如果第二个commit没收到导致数据不一致")]),a._v(" "),v("li",[a._v("超时同步阻塞 : 所有参与者都是同步阻塞型的,一个参与者出现超时,其他参与者都会被动阻塞占用资源不释放")]),a._v(" "),v("li",[a._v("单点故障 : 协调者单点问题,虽然可以重新选举协调者,但是无法解决参与者的阻塞状态")])]),a._v(" "),v("h2",{attrs:{id:"_3pc升级"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3pc升级"}},[a._v("#")]),a._v(" 3PC升级")]),a._v(" "),v("ol",[v("li",[a._v("插入询问阶段 : CanCommit、PreCommit、DoCommit or DoCancel")]),a._v(" "),v("li",[a._v("引入超时 : 当参与者未收到协调者commit,会对本地事务进行commit不会一直阻塞,解决了单点问题,但是没解决一致性问题.")])]),a._v(" "),v("h2",{attrs:{id:"tcc-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcc-2"}},[a._v("#")]),a._v(" TCC")]),a._v(" "),v("p",[a._v("TCC(补偿事务)是应用层面对2PC(DB层面),针对每个操作注册一个对应的try和cancel,缺点是业务侵入,实现复杂.")]),a._v(" "),v("h2",{attrs:{id:"seata-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#seata-3"}},[a._v("#")]),a._v(" seata")]),a._v(" "),v("ol",[v("li",[a._v("TC : 全局事务管理器")]),a._v(" "),v("li",[a._v("TM : 事务发起者")]),a._v(" "),v("li",[a._v("RM : 本地事务管理器")])]),a._v(" "),v("h3",{attrs:{id:"事务流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事务流程"}},[a._v("#")]),a._v(" 事务流程")]),a._v(" "),v("ol",[v("li",[a._v("TM 向 TC 申请开启一个全局事务, TC 创建全局事务后返回全局唯一 XID, XID 在全局事务上下文中传播")]),a._v(" "),v("li",[a._v("RM 向 TC 注册一个分支事务,该分支事务术语拥有相同 XID的全局事务")]),a._v(" "),v("li",[a._v("TM 向 TC 发起全局提交和会滚")]),a._v(" "),v("li",[a._v("TC 调度 XID 下事务完成提交或者会滚")])]),a._v(" "),v("h3",{attrs:{id:"at模式-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#at模式-2"}},[a._v("#")]),a._v(" AT模式")]),a._v(" "),v("ol",[v("li",[a._v("拦截业务SQL")]),a._v(" "),v("li",[a._v("生成前镜像(SQL前的数据,回滚用)")]),a._v(" "),v("li",[a._v("生成后镜像(SQL后的镜像,幂等用)")]),a._v(" "),v("li",[a._v("TC 向所有 RM 发起提交或会滚")])]),a._v(" "),v("blockquote",[v("p",[a._v("tc 实现行锁,记录影响数据,保证隔离性")])]),a._v(" "),v("h3",{attrs:{id:"tcc模式-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcc模式-2"}},[a._v("#")]),a._v(" TCC模式")]),a._v(" "),v("ol",[v("li",[a._v("TM 发起全局事务")]),a._v(" "),v("li",[a._v("TC 提交或会滚")])]),a._v(" "),v("h4",{attrs:{id:"传统tcc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#传统tcc"}},[a._v("#")]),a._v(" 传统TCC")]),a._v(" "),v("p",[a._v("需要下游提供 3 个接口.")]),a._v(" "),v("ol",[v("li",[a._v("尝试 : 预留资源")]),a._v(" "),v("li",[a._v("确认 : 使用 try 阶段的预留资源")]),a._v(" "),v("li",[a._v("取消 : 释放 try 阶段预留的资源")])]),a._v(" "),v("h3",{attrs:{id:"saga模式-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#saga模式-2"}},[a._v("#")]),a._v(" saga模式")]),a._v(" "),v("p",[a._v("适合长事务")]),a._v(" "),v("ol",[v("li",[a._v("将分布式事务拆分成若干本地事务")]),a._v(" "),v("li",[a._v("每个本地事务都有执行模块和补偿模块")]),a._v(" "),v("li",[a._v("基于状态机控制事务流转,当某个服务宕机后通过数据库存储状态备份服务可以继续执行")])]),a._v(" "),v("h3",{attrs:{id:"xa模式-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xa模式-2"}},[a._v("#")]),a._v(" XA模式")]),a._v(" "),v("h3",{attrs:{id:"seata高可用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#seata高可用"}},[a._v("#")]),a._v(" seata高可用")]),a._v(" "),v("ol",[v("li",[a._v("TC 有状态部署 : local file 不支持异地恢复")]),a._v(" "),v("li",[a._v("TC 无状态部署 : session db (数据公共存储)")]),a._v(" "),v("li",[a._v("一致性协议同步 : leader")])])])}),[],!1,null,null,null);t.default=s.exports}}]);