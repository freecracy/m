(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{462:function(s,t,a){s.exports=a.p+"assets/img/redisstring.8c45192e.png"},463:function(s,t,a){s.exports=a.p+"assets/img/redislist.ca69f839.png"},464:function(s,t,a){s.exports=a.p+"assets/img/redishash.3291703d.png"},465:function(s,t,a){s.exports=a.p+"assets/img/redisset.fb4b72bb.png"},466:function(s,t,a){s.exports=a.p+"assets/img/rediszset.9ffedd45.png"},467:function(s,t,a){s.exports=a.p+"assets/img/sds.0a6587dd.png"},468:function(s,t,a){s.exports=a.p+"assets/img/list.9244dafd.png"},469:function(s,t,a){s.exports=a.p+"assets/img/ziplist.04434f24.png"},470:function(s,t,a){s.exports=a.p+"assets/img/hash.13d09f70.png"},471:function(s,t,a){s.exports=a.p+"assets/img/skiplist.a6e906fe.png"},472:function(s,t,a){s.exports=a.p+"assets/img/intset.dc5689a8.png"},473:function(s,t,a){s.exports=a.p+"assets/img/redisdb.2646ff42.png"},538:function(s,t,a){"use strict";a.r(t);var e=a(20),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),e("h2",{attrs:{id:"内部结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内部结构"}},[s._v("#")]),s._v(" 内部结构")]),s._v(" "),e("h3",{attrs:{id:"redisdb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redisdb"}},[s._v("#")]),s._v(" redisdb")]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("redisDb")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    dict "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("dict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* The keyspace for this DB */")]),s._v("\n    dict "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("expires"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Timeout of keys with a timeout set */")]),s._v("\n    dict "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("blocking_keys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Keys with clients waiting for data (BLPOP)*/")]),s._v("\n    dict "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ready_keys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Blocked keys that received a PUSH */")]),s._v("\n    dict "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("watched_keys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* WATCHED keys for MULTI/EXEC CAS */")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                     "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Database ID */")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" avg_ttl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Average TTL, just for stats */")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" expires_cursor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Cursor of the active expire cycle. */")]),s._v("\n    list "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("defrag_later"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* List of key names to attempt to defrag one by one, gradually. */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" redisDb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("ol",[e("li",[s._v("dict : 用来存储数据,当前 db 下所有数据都存在这里")]),s._v(" "),e("li",[s._v("expires : 存储过期 key 与过期时间的映射")]),s._v(" "),e("li",[s._v("blocking_keys : 存储处于阻塞状态的 key 及 client 列表如执行 list 阻塞命令 blpop、brpop、brpoplpush时如果 list 为空,就会将 client 设为阻塞状态,同时将 client 添加到 blocking_keys 这个阻塞 dict")]),s._v(" "),e("li",[s._v("ready_keys : 存储解除阻塞的 key,当有其它调用放在某个 key 对应的 list 增加元素时 redis 会检测是否有 client 阻塞在这个 key 上,即检查 blocking_keys 是否包含这个 key如果有则将这个 key 加入到 read_keys 的 dict 中")]),s._v(" "),e("li",[s._v("watched_keys : 当 client 使用 watch 指令监控 key,这个 key 和 client 就会被保存到 watched_keys 中")]),s._v(" "),e("li",[s._v("id : 数据库编号")])]),s._v(" "),e("h2",{attrs:{id:"数据类型-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据类型-2"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),e("h3",{attrs:{id:"string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[s._v("#")]),s._v(" string")]),s._v(" "),e("p",[e("img",{attrs:{src:a(462),alt:"redisstring"}})]),s._v(" "),e("h3",{attrs:{id:"list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[s._v("#")]),s._v(" list")]),s._v(" "),e("p",[e("img",{attrs:{src:a(463),alt:"redislist"}})]),s._v(" "),e("h3",{attrs:{id:"hash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[s._v("#")]),s._v(" hash")]),s._v(" "),e("p",[e("img",{attrs:{src:a(464),alt:"redishash"}})]),s._v(" "),e("h3",{attrs:{id:"set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[s._v("#")]),s._v(" set")]),s._v(" "),e("p",[e("img",{attrs:{src:a(465),alt:"redisset"}})]),s._v(" "),e("h3",{attrs:{id:"zset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zset"}},[s._v("#")]),s._v(" zset")]),s._v(" "),e("p",[e("img",{attrs:{src:a(466),alt:"rediszset"}})]),s._v(" "),e("h2",{attrs:{id:"数据结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[s._v("#")]),s._v(" 数据结构")]),s._v(" "),e("h3",{attrs:{id:"sds"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sds"}},[s._v("#")]),s._v(" SDS")]),s._v(" "),e("p",[e("img",{attrs:{src:a(467),alt:"sds"}})]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sds.h")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("__attribute__")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__packed__"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sdshdr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint64_t")]),s._v(" len"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 已使用的")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint64_t")]),s._v(" alloc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 字符串最大容量 ")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" flags"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 低三位表示 lsb 类型,后 5 位未使用 ")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" buf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 字符数组 buf ,的最大长度 2^8 2^16 2^32 2^64")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h4",{attrs:{id:"int"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#int"}},[s._v("#")]),s._v(" int")]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[s._v("type string\nencoding "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\nptr 数字\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h4",{attrs:{id:"embstr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#embstr"}},[s._v("#")]),s._v(" embstr")]),s._v(" "),e("p",[s._v("长度小于32字节的字符串,embstr值需一次内存分配,而且同一块连续的内存, 但是 embstr 是只读的,当一个 embstr 编码字符串进行 append 时会转变成 raw 再进行操作")]),s._v(" "),e("h4",{attrs:{id:"raw"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#raw"}},[s._v("#")]),s._v(" raw")]),s._v(" "),e("p",[s._v("长度大于32字节的字符串会使用SDS.")]),s._v(" "),e("h3",{attrs:{id:"list-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list-2"}},[s._v("#")]),s._v(" list")]),s._v(" "),e("p",[s._v("最多存储"),e("code",[s._v("2^32-1")]),s._v("个元素.")]),s._v(" "),e("p",[e("img",{attrs:{src:a(468),alt:"list"}})]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// adlist.h")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("list")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    listNode "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    listNode "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("tail"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("dup"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// dup 函数用于复制链表节点所保存的值,用于深度拷贝")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("free"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于释放链表节点所保存的值")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("match"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于对比链表节点所保存的值和另一个输入的值是否相等")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" len"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h3",{attrs:{id:"ziplist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ziplist"}},[s._v("#")]),s._v(" ziplist")]),s._v(" "),e("p",[s._v("除 string 和 set 所有类型优先选择 ziplist .")]),s._v(" "),e("p",[e("img",{attrs:{src:a(469),alt:"ziplist"}})]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ziplist.c")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("zlbytes"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("zltail"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("zllen"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("entry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("entry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("entry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("zlend"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ziplist.c")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("prevlen"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("encoding"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("entry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ol",[e("li",[s._v("zlbytes : ziplist 所占用的总内存字节数")]),s._v(" "),e("li",[s._v("zltail : 尾节点到起始位置的字节数")]),s._v(" "),e("li",[s._v("zllen : 总共包含节点数")]),s._v(" "),e("li",[s._v("entry : 数据节点")]),s._v(" "),e("li",[s._v("zlend : 255,用来标记列表结束")]),s._v(" "),e("li",[s._v("prevrawlen : 前置节点长度")]),s._v(" "),e("li",[s._v("prerawlensize : 编码 prevrawlen 所需要的字节数")]),s._v(" "),e("li",[s._v("len : 当前节点长度")]),s._v(" "),e("li",[s._v("lensize : 编码 len 所需字节数")]),s._v(" "),e("li",[s._v("encoding : 当前节点所用的编码类型")]),s._v(" "),e("li",[s._v("entrydata : 当前节点数据")])]),s._v(" "),e("h3",{attrs:{id:"hashtable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashtable"}},[s._v("#")]),s._v(" hashtable")]),s._v(" "),e("p",[s._v("hashmap 中以 hash 函数的方式,而 hashtable 中计算 hash 值后,还要 sizemask 属性和 hash 值再次得到下标, 使用 MurmurHash2 来计算hash 值,并用链地址法解决键冲突,被 hash 到一个索引的多个键值会被连接成一个单向链表.")]),s._v(" "),e("p",[s._v("发生冲突时先入的会放到链表尾部,插入到放到链表头部.")]),s._v(" "),e("p",[e("img",{attrs:{src:a(470),alt:"hash"}})]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// dict.h")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("dict")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    dictType "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("privdata"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    dictht ht"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" rehashidx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// rehashidx == -1 表示没有在rehash")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" iterators"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前正在运行的迭代器数")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" dict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// dict.h")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("dictht")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    dictEntry "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("table"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" size"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// hash 表的大小")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" sizemask"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于计算索引值")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" used"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// hash 表中节点数")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" dictht"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// dict.h")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("dictEntry")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint64_t")]),s._v(" u64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("int64_t")]),s._v(" s64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" v"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("dictEntry")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("next"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" dictEntry"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("扩容:  ht[1] 比当前 ht[0].used 值的 2 倍大的第一个 2 的整数幂")]),s._v(" "),e("p",[s._v("缩容:")]),s._v(" "),e("h3",{attrs:{id:"skiplist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#skiplist"}},[s._v("#")]),s._v(" skiplist")]),s._v(" "),e("p",[s._v("节点按照其 score 有序排列.")]),s._v(" "),e("p",[e("img",{attrs:{src:a(471),alt:"skiplist"}})]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// server.h")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("zset")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    dict "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("dict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    zskiplist "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("zsl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" zset"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// server.h")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("zskiplist")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("zskiplistNode")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("header"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("tail"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" level"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" zskiplist"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// server.h")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("zskiplistNode")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    sds ele"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" score"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("zskiplistNode")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("backward"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从大指向小")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("zskiplistLevel")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("zskiplistNode")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("forward"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指向下一个 node 的指针, 从小指向大")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" span"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t\t\t\t   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 跨度值,两个节点的 score 差值")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" level"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" zskiplistNode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h3",{attrs:{id:"linkedlist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist"}},[s._v("#")]),s._v(" linkedlist")]),s._v(" "),e("h3",{attrs:{id:"quicklist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#quicklist"}},[s._v("#")]),s._v(" quicklist")]),s._v(" "),e("p",[s._v("双向链表的每一个 node 都是一个 ziplist")]),s._v(" "),e("h3",{attrs:{id:"intset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#intset"}},[s._v("#")]),s._v(" intset")]),s._v(" "),e("p",[e("img",{attrs:{src:a(472),alt:"intset"}})]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// intset.h")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("intset")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint32_t")]),s._v(" encoding"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint32_t")]),s._v(" length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("int8_t")]),s._v(" contents"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" intset"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h2",{attrs:{id:"redis-数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-数据库"}},[s._v("#")]),s._v(" Redis 数据库")]),s._v(" "),e("h2",{attrs:{id:"redisobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redisobject"}},[s._v("#")]),s._v(" redisObject")]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// src/server.h")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("redisObject")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" type"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 数据类型, 4 位 0.5 字节")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" encoding"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 数据编码即存储方式,底层结构, 4 位 0.5 字节")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" lru"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("LRU_BITS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// LRU time (相对于全局 lru_clock) or LFU data (低 8 位访问频率,高 16 位访问时间, 24位, 3字节)")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" refcount"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 引用计数, 32 位, 4字节")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 数据指针, 8 字节")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" robj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h3",{attrs:{id:"lru"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lru"}},[s._v("#")]),s._v(" lru")]),s._v(" "),e("p",[s._v("lru : 正常思路是当前时间减去 lru,差值最大的被删除,但是 redis 没有这么做,维护一个全局属性 lru_clock 通过全局函数 serverCron 每隔 100 毫秒执行一次更新时间,记录当前时间戳.最后决定删除的数据是通过 lru_clock 减去对象的 lru 属性,这样做可以避免每次更新对象的 lru 属性的时候可以直接取全局属性,而不需要取调用系统函数获取系统时间.lru 只有 24 位只能存储 194 天的时间戳大小,超过 194 天后从 0 开始,所以可能出现 lru 大于 lru_clock 的情况.")]),s._v(" "),e("ol",[e("li",[s._v("当全局 lru_clock > lru 则使用 lru_clock - lru 得到空闲时间")]),s._v(" "),e("li",[s._v("当全局 lru_clock < lru 则使用 194 天 - lru + lru_clock 得到空闲时间")])]),s._v(" "),e("h3",{attrs:{id:"lfu"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lfu"}},[s._v("#")]),s._v(" lfu")]),s._v(" "),e("h3",{attrs:{id:"访问频次递增"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#访问频次递增"}},[s._v("#")]),s._v(" 访问频次递增")]),s._v(" "),e("ol",[e("li",[s._v("提取 0 和 1 之间随机数 R")]),s._v(" "),e("li",[s._v("counter - 初始值 (默认5) 得到基础差值,如果差值 < 0,则取 0,为了方便计算记为 baseval")]),s._v(" "),e("li",[s._v("概率 p = 1/(baseval * lfu_log_factor + 1)")]),s._v(" "),e("li",[s._v("如果 R < p,频次递增 counter++")])]),s._v(" "),e("h3",{attrs:{id:"访问频次递减"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#访问频次递减"}},[s._v("#")]),s._v(" 访问频次递减")]),s._v(" "),e("p",[s._v("counter 减少速度由参数 lfu-decay-time 控制,默认 1,单位分钟, N 分钟内没有被访问, counter 就减 N")]),s._v(" "),e("ol",[e("li",[s._v("获取当前时间戳,转换为分钟后取低 16 位,几为 now")]),s._v(" "),e("li",[s._v("取出对象内的 lru 属性中高 16 位,机为 ldt")]),s._v(" "),e("li",[s._v("当 lru > now,默认过滤器一个周期,(16位65535)则取差值 65535-ldt+now,当 lru <=now 时,取差值 now-ldt,记为 idle_time")]),s._v(" "),e("li",[s._v("取出配置文件中 lfu_decay_time 计算 idle_time/lfu_decay_time 记为 num_periods")]),s._v(" "),e("li",[s._v("counter 减少,counter-num_periods")])]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("type")]),s._v(" "),e("th",[s._v("类型")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("OBJ_STRING")]),s._v(" "),e("td",[s._v("字符串")])]),s._v(" "),e("tr",[e("td",[s._v("OBJ_LIST")]),s._v(" "),e("td",[s._v("链表")])]),s._v(" "),e("tr",[e("td",[s._v("OBJ_SET")]),s._v(" "),e("td",[s._v("集合")])]),s._v(" "),e("tr",[e("td",[s._v("OBJ_ZSET")]),s._v(" "),e("td",[s._v("有序集合")])]),s._v(" "),e("tr",[e("td",[s._v("OBJ_HASH")]),s._v(" "),e("td",[s._v("哈希")])]),s._v(" "),e("tr",[e("td",[s._v("OBJ_MODULE")]),s._v(" "),e("td",[s._v("模块对象")])]),s._v(" "),e("tr",[e("td",[s._v("OJB_STREAM")]),s._v(" "),e("td",[s._v("流对象")])])])]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("OBJ_ENCODING_RAW")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Raw representation */")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("OBJ_ENCODING_INT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("     ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Encoded as integer */")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("OBJ_ENCODING_HT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("      ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Encoded as hash table */")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("OBJ_ENCODING_ZIPMAP")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("  ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Encoded as zipmap */")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("OBJ_ENCODING_LINKEDLIST")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* No longer used: old list encoding. */")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("OBJ_ENCODING_ZIPLIST")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Encoded as ziplist */")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("OBJ_ENCODING_INTSET")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("  ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Encoded as intset */")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("OBJ_ENCODING_SKIPLIST")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("  ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Encoded as skiplist */")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("OBJ_ENCODING_EMBSTR")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("  ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Embedded sds string encoding */")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("OBJ_ENCODING_QUICKLIST")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Encoded as linked list of ziplists */")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("OBJ_ENCODING_STREAM")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Encoded as a radix tree of listpacks */")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("img",{attrs:{src:a(473),alt:"redisdb"}})]),s._v(" "),e("h2",{attrs:{id:"redis设计与实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis设计与实现"}},[s._v("#")]),s._v(" Redis设计与实现")]),s._v(" "),e("p",[e("a",{attrs:{href:"http://redisbook.com",target:"_blank",rel:"noopener noreferrer"}},[s._v("Redis设计与实现"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"使用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[s._v("#")]),s._v(" 使用场景")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("类型")]),s._v(" "),e("th",[s._v("最多存储")]),s._v(" "),e("th",[s._v("场景")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("string")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("缓存、计数(incr key)、共享 session、限流(ip 次数)")])]),s._v(" "),e("tr",[e("td",[s._v("hash")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("对象存储(一般比字符串节省内存)")])]),s._v(" "),e("tr",[e("td",[s._v("list")]),s._v(" "),e("td",[s._v("2^32-1")]),s._v(" "),e("td",[s._v("消息队列(lpush + rpop、rpush + rpop)(没有 ack 机制)、栈、文章列表(lrange key start end 分页)")])]),s._v(" "),e("tr",[e("td",[s._v("set")]),s._v(" "),e("td",[s._v("2^32-1")]),s._v(" "),e("td",[s._v("用户标签、抽奖")])]),s._v(" "),e("tr",[e("td",[s._v("zset")]),s._v(" "),e("td",[s._v("2^32-1")]),s._v(" "),e("td",[s._v("排行榜、延时消息队列")])])])]),s._v(" "),e("h3",{attrs:{id:"用户标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户标签"}},[s._v("#")]),s._v(" 用户标签")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("sadd user:1:tags tag1 tag2 "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给用户打标签")]),s._v("\nsadd tag1:users user:1 "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给标签加用户")]),s._v("\nsadd tag2:users user:2\nsinter user:1:tags user:2:tags "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 求共同标签")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h3",{attrs:{id:"抽奖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#抽奖"}},[s._v("#")]),s._v(" 抽奖")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("srandmember key count "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 随机弹出 count 个元素,集合元素个数不变")]),s._v("\nspop key count "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 已抽奖用户不再参与抽奖,比如一等奖、二等奖")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"hyperloglogs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hyperloglogs"}},[s._v("#")]),s._v(" HyperLogLogs")]),s._v(" "),e("h2",{attrs:{id:"bitmaps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bitmaps"}},[s._v("#")]),s._v(" Bitmaps")]),s._v(" "),e("h2",{attrs:{id:"geospatial"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#geospatial"}},[s._v("#")]),s._v(" geospatial")])])}),[],!1,null,null,null);t.default=n.exports}}]);