(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{479:function(t,s,a){t.exports=a.p+"assets/img/phpautoload.b93c69ee.png"},480:function(t,s,a){t.exports=a.p+"assets/img/openresty-shijianqudong.4ff10286.png"},481:function(t,s,a){t.exports=a.p+"assets/img/lua-11.9b29f9c4.png"},533:function(t,s,a){"use strict";a.r(s);var n=a(20),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"php"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#php"}},[t._v("#")]),t._v(" PHP")]),t._v(" "),n("h2",{attrs:{id:"isset-is-null-empty"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#isset-is-null-empty"}},[t._v("#")]),t._v(" isset & is_null & empty")]),t._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token php language-php"}},[n("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ini_set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'display_errors'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error_reporting")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"E_ALL"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("isset")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# isset")]),t._v("\nbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("false"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# empty")]),t._v("\nbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# is_null")]),t._v("\nbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("false"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("false"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("false"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])]),n("h2",{attrs:{id:"魔术方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#魔术方法"}},[t._v("#")]),t._v(" 魔术方法")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("方法")]),t._v(" "),n("th",[t._v("用法")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("construct/destruct")]),t._v(" "),n("td",[t._v("构造函数、析构函数")])]),t._v(" "),n("tr",[n("td",[t._v("call/callStatic")]),t._v(" "),n("td",[t._v("调用一个不可访问方法时 call 会被调用, 在静态上下文中调用一个不可访问的方法是 callStatic 会被调用, 方法重载")])]),t._v(" "),n("tr",[n("td",[t._v("set/get")]),t._v(" "),n("td",[t._v("不可访问属性赋值 set 会被调用, 读取不可访问属性时 get 会被调用")])]),t._v(" "),n("tr",[n("td",[t._v("isset/unset")]),t._v(" "),n("td",[t._v("当对不可访问属性调用 isset 或 empty 时 isset 会被调用, 当对不可访问属性调用 unset 时 unset 会被调用")])]),t._v(" "),n("tr",[n("td",[t._v("sleep/wakeup")]),t._v(" "),n("td",[t._v("serialize 前会先调用 sleep,如果未返回内容则null会被序列化,unserialize前会检查wakeup")])]),t._v(" "),n("tr",[n("td",[t._v("toString")]),t._v(" "),n("td",[t._v("当一个类被当字符串使用时调用")])]),t._v(" "),n("tr",[n("td",[t._v("invoke")]),t._v(" "),n("td",[t._v("当调用一个函数调用一个对象时会被自动调用")])])])]),t._v(" "),n("h2",{attrs:{id:"php-常用函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#php-常用函数"}},[t._v("#")]),t._v(" PHP 常用函数")]),t._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# string")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("strstr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("search"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("before_search"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 搜索字符串是否在第一个字符串里,如果在返回字符串及剩余部分,否则返回 false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("strpos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("find"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查找字符串第一次出现的位置,如果不存在返回 false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串截取,返回字符串一部分")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# array")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_flip")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword type-casting"}},[t._v("array")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 键值反转")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_slice ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("array")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$offset")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$length")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("bool")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$preserve_keys")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("array")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组截取")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_splice ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[t._v("array")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$input")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$offset")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$length")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("mixed")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$replacement")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("array")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 去掉数组某一部分并用其他值取代")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("h3",{attrs:{id:"array-filter-array-map-array-walk"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#array-filter-array-map-array-walk"}},[t._v("#")]),t._v(" array_filter & array_map & array_walk")]),t._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把输入数组中每个键值传递给回调函数,如果回调函数返回 true 把当前键值返回给结果数组,键名保持不变")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[t._v("array")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_filter ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("array")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("callable")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$callback")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$flag")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自定义函数作用到每个值上,返回作用后带有新值的数组")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[t._v("array")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myfunction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("array1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("array2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("array3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每个元素应用自定义函数,键名、键值是参数,一般用 &$value 来改变原有数组值")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_walk")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[t._v("array")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("myfunction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("parameter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_walk_recursive")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[t._v("array")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("myfunction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("parameter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// array_walk 的递归")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("h2",{attrs:{id:"门面模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#门面模式"}},[t._v("#")]),t._v(" 门面模式")]),t._v(" "),n("p",[t._v("config/app.php providers 数组是服务提供者,alias 数组中定一个门面,就可以静态的调用, facedes 就是服务容器那些基类的静态代理, 使语法更简洁.我们常用的Route、Redis、Auth都是facade就是外观模式的具体实现,每个外观类继承自统一的抽象外观类,在抽象外观类中提供了访问其背后子系统的基础方法.对于新的业务需求,不需要修改原有外观类,而应该增加一个新的具体外观类.由新的外观类来关联子系统对象,同时通过修改配置文件来达到不修改源码并更改外观类的目的.")]),t._v(" "),n("p",[t._v("根据单一职责原则,在软件中一个系统划分成若干子系统,有利于降低系统复杂性,使子系统通信和相互依赖最小,外观模式提供简单而单一的入口.客户端与外观打交道而不需要与子系统内部交互.")]),t._v(" "),n("p",[t._v("抽象外观类、外观实现类、具体实现类(子系统)")]),t._v(" "),n("h2",{attrs:{id:"依赖注入-控制反转"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入-控制反转"}},[t._v("#")]),t._v(" 依赖注入 & 控制反转")]),t._v(" "),n("p",[t._v("依赖注入: 依赖解耦,单元测试方便mock,")]),t._v(" "),n("p",[t._v("控制反转: 控制反转最常用的方式是依赖注入(需要手动注入),还有一种依赖查找,通过控制反转在")]),t._v(" "),n("p",[t._v("服务容器就是控制反转的调度容器,实现依赖注入可以在构造函数的 setter 方法中,服务容器中只存储了对象的描述,而并不需要知道如何具体的构造一个对象,他会更具 php 的反射服务去解析具体化一个对象.服务容器中的 build 方法中需要通过反射服务来解析依赖,")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlly1gfyjm8bn30j30ds0d474x.jpg",alt:"img"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlly1gfyjmpn1poj30ds0ga74z.jpg",alt:"img"}})]),t._v(" "),n("h2",{attrs:{id:"自动加载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自动加载"}},[t._v("#")]),t._v(" 自动加载")]),t._v(" "),n("p",[n("img",{attrs:{src:a(479),alt:"phpautoload"}})]),t._v(" "),n("h2",{attrs:{id:"nginx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" nginx")]),t._v(" "),n("p",[t._v("底层基于事件驱动模型,每个请求进来注册事件,并注册 callback 回调函数,等数据准备好了就调用回调函数进行处理,他是异步非阻塞的.")]),t._v(" "),n("p",[n("a",{attrs:{href:"http://openresty.org/download/agentzh-nginx-tutorials-en.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("limit_req_zone "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http 块")]),t._v("\nlimit_req      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# location 块")]),t._v("\nmap\ngeo\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("h2",{attrs:{id:"openresty"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#openresty"}},[t._v("#")]),t._v(" openResty")]),t._v(" "),n("p",[t._v("首先启动带有 LuaJIT 虚拟机的 master 进程, work 进程从 master fork 出来,在 worker 内进程工作主要由 lua 协程完成,同一个 worker 内的所有协程共享 lua 虚拟机,当 lua 发生 io 调用虚拟机调用 lua 协程的 yield 把自己挂起,在 nginx 中注册回调函数, worker 就可以处理其他请求了, 等 io 事件处理完了,nginx 就会调用 resume 来唤醒协程.基本事件处理放在 worker 中, master 只负责一些全局初始化,以及对 worker 的管理.每个 worker 都使用一个 luaVM,每个请求被分到 worker 时将在这个 luaVM 中创建一个协程,协程之间数据隔离,每个协程都有独立的全局变量 _G.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(480),alt:"openresty-shijianqudong"}})]),t._v(" "),n("p",[t._v("worker 进程共享数据 : shared dict 数据结构提供 20 多个都是原子操作的 Lua API 实现数据共享.")]),t._v(" "),n("p",[t._v("使用 dyups 解决动态配置 upstream 的问题.")]),t._v(" "),n("p",[t._v("为避免每次修改都重启 nginx 可在 nginx 的 server 选项中配置 lua_code_cache 选项.")]),t._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    lua_code_cache off\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("h3",{attrs:{id:"生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),n("p",[t._v("nginx 的每个请求由 11 个阶段, openResty 也有 11 个 *_by_lua 指令.")]),t._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// src/http/ngx_http_core_module.h")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    NGX_HTTP_POST_READ_PHASE "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NGX_HTTP_SERVER_REWRITE_PHASE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NGX_HTTP_FIND_CONFIG_PHASE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NGX_HTTP_REWRITE_PHASE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NGX_HTTP_POST_REWRITE_PHASE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NGX_HTTP_PREACCESS_PHASE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NGX_HTTP_ACCESS_PHASE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NGX_HTTP_POST_ACCESS_PHASE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NGX_HTTP_PRECONTENT_PHASE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NGX_HTTP_CONTENT_PHASE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NGX_HTTP_LOG_PHASE\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" ngx_http_phases"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br")])]),n("p",[n("img",{attrs:{src:a(481),alt:"lua-11"}})]),t._v(" "),n("h2",{attrs:{id:"trait"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#trait"}},[t._v("#")]),t._v(" trait")]),t._v(" "),n("p",[t._v("实现代码复用的一种方法即多继承,优先顺序是当前类成员覆盖 trait 方法而 trait 覆盖基类方法.如果两个 trait 插入同名方法需要 insteatof 明确指出使用冲突方法中的哪一个,否则会产生错误. as 可以来修改访问控制.")]),t._v(" "),n("h2",{attrs:{id:"php7新特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#php7新特性"}},[t._v("#")]),t._v(" PHP7新特性")]),t._v(" "),n("ol",[n("li",[t._v("标量类型声明(函数参数类型声明)")]),t._v(" "),n("li",[t._v("返回值类型声明"),n("code",[t._v(": type")])]),t._v(" "),n("li",[t._v("null合并运算符"),n("code",[t._v("??")])]),t._v(" "),n("li",[t._v("组合比较运算符"),n("code",[t._v("<=>")]),t._v("小于、等于、大于返回 -1,0,1")]),t._v(" "),n("li",[n("code",[t._v("define()")]),t._v("定义常量数组")]),t._v(" "),n("li",[t._v("匿名类"),n("code",[t._v("new class")])])]),t._v(" "),n("h2",{attrs:{id:"php8新特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#php8新特性"}},[t._v("#")]),t._v(" PHP8新特性")]),t._v(" "),n("ol",[n("li",[t._v("联合类型"),n("code",[t._v("|或?")])]),t._v(" "),n("li",[t._v("JIT 即时编译")]),t._v(" "),n("li",[t._v("Attribute (注解???)")]),t._v(" "),n("li",[t._v("match 表达式, switch 变形,不需要 break")]),t._v(" "),n("li",[t._v("property promotion")]),t._v(" "),n("li",[t._v("mixed 类型(混合类型)")])]),t._v(" "),n("h3",{attrs:{id:"match"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" match")]),t._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'3'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("h3",{attrs:{id:"property-promotion"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#property-promotion"}},[t._v("#")]),t._v(" property promotion")]),t._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" person "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" funtion "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__construct ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("age")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $this->age = $age")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("h3",{attrs:{id:"新函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新函数"}},[t._v("#")]),t._v(" 新函数")]),t._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("str_contains\nstr_starts_with\nstr_ends_with\nfdiv "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以被 0 除")]),t._v("\nget_debug_type\nget_resource_id\ntoken_get_all\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("h2",{attrs:{id:"进程模型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进程模型"}},[t._v("#")]),t._v(" 进程模型")]),t._v(" "),n("p",[t._v("FPM 启动时会读取配置文件然后创建一个 master 进程和若干 worker 进程(php-fpm.conf中配置),worker 进程是 master 进程 fork 出来的.master 进程负责管理 worker 进程、监听端口,worker 进程处理业务.当 nginx 收到请求然后将其转发给 php-fpm ,php-fpm 受到请求后将请求转发给一个空闲的 worker 进程,当 worker 进程处理完后会将请求返回给 nginx.")]),t._v(" "),n("ol",[n("li",[t._v("动态管理 : FPM 启动时会创建一定数量的 worker 进程,请求数量逐渐增大时会动态增加 worker 进程数量,当请求数量下来时会销毁刚才动态创建出来的 worker 进程.如果配置最大进程数过大(ulimit),当请求增加时会出现大量 worke 进程,进程间会频繁切换浪费 cpu 资源.")]),t._v(" "),n("li",[t._v("静态管理 : FPM 启动时会创建配置文件中指定数量的 worker 进程,不会随请求数量的多少而增减,开启的 worker 进程同一时间只能处理一个请求.当请求量增大时将会出现等待的情形.")]),t._v(" "),n("li",[t._v("按需管理 : FPM 启动时不会创建 worker 进程,当请求到达时 master 才会 fork 子进程,请求量增大时 master 进程会非常繁忙会占用大量 cpu 时间,这种模式不适合大流量环境.")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("配置")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("pm.start_servers")]),t._v(" "),n("td",[t._v("动态方式下起始 worker 进程数量")])]),t._v(" "),n("tr",[n("td",[t._v("pm.min_spare_servers")]),t._v(" "),n("td",[t._v("动态方式下最小 worker 进程数量")])]),t._v(" "),n("tr",[n("td",[t._v("pm.max_sapre_servers")]),t._v(" "),n("td",[t._v("动态方式下最大 worker 进程数量")])]),t._v(" "),n("tr",[n("td",[t._v("pm.max_children")]),t._v(" "),n("td",[t._v("静态方式下开启 worker 进程数量")])])])]),t._v(" "),n("h2",{attrs:{id:"配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),n("div",{staticClass:"language-ini line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-ini"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 加载 Zend OPCache 扩展")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("zend_extension")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("opcache")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 启用 Zend OPCache")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("opcache.enable")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 启用 Zend OPCache,在 CLI 模式下")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("opcache.enable_cli")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; OPCache 共享内存存储大小,默认值 128")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("opcache.memory_consumption")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("128")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; interned string 内存大小,默认值 8")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("opcache.interned_strings_buffer")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("8")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 缓存脚本文件数量的上限,默认值 10000")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("opcache.max_accelerated_files")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("10000")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 10秒检查一次文件的更新,默认值 2s")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("opcache.revalidate_freq")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("10")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 删除所有 PHPDoc 注释,默认值 1,表示保留注释")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("opcache.save_comments")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("0")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])]),n("h3",{attrs:{id:"php-fpm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#php-fpm"}},[t._v("#")]),t._v(" php-fpm")]),t._v(" "),n("div",{staticClass:"language-ini line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-ini"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 一个 php-fpm 最多处理多少个用户请求会被销毁,当 php-fpm 被销毁后所占用的内存会被回收")]),t._v("\npm.max_request\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("h2",{attrs:{id:"内存泄漏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏"}},[t._v("#")]),t._v(" 内存泄漏")]),t._v(" "),n("p",[t._v("默认内存 128M")]),t._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ini_set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"memory_limit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'128M'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置脚本所需内存,可以设置 -1 (不限制内存)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("memory_get_usage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取脚本所用的内存大小")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("memory_get_peak_usage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前脚本到当前位置所占用的内存峰值")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("h3",{attrs:{id:"原因"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),n("ol",[n("li",[t._v("操作数据过大")]),t._v(" "),n("li",[t._v("大量数据复制 : 局部代码执行内存翻倍,写时复制")]),t._v(" "),n("li",[t._v("上传参数设置不合理"),n("code",[t._v("post_max_size、max_file_uploads、upload_max_filesize、max_input_vars、max_input_nesting_level")])]),t._v(" "),n("li",[t._v("无用数据不能及时释放")]),t._v(" "),n("li",[t._v("循环引用 (5.3 以下版本会出现) : 5.3 引入同步周期回收算法(gc)处理内存泄漏问题"),n("code",[t._v("zend.enable=0(php.ini)、gc_enable()、gc_disable()")])])]),t._v(" "),n("h3",{attrs:{id:"fpm-内存泄漏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fpm-内存泄漏"}},[t._v("#")]),t._v(" fpm 内存泄漏")]),t._v(" "),n("p",[t._v("nginx fork 出 n 个 work 进程, php-fpm 管理器 fork 出 n 个子进程,当有用户请求 nginx 的一个 work 接收请求并将请求放到 socket 中,php-fpm 空闲的子进程监听到 socket 中有请求接收并处理.php 在每次请求结束后会自动释放内存某些扩展的内存管理没有做好或代码中出现循环引用导致未能及时释放资源.")]),t._v(" "),n("h2",{attrs:{id:"nginx-rewrite"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-rewrite"}},[t._v("#")]),t._v(" nginx-rewrite")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("flag")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("last")]),t._v(" "),n("td",[t._v("重写后马上发起一个新的请求,再次进入 server,重试 location 匹配,超过 10 次匹配不到报 500 错误,地址栏 url 不变")])]),t._v(" "),n("tr",[n("td",[t._v("break")]),t._v(" "),n("td",[t._v("重写后直接使用当前资源,不在执行 location 里余下语句,完成本次请求,地址栏 url 不变")])]),t._v(" "),n("tr",[n("td",[t._v("redirect")]),t._v(" "),n("td",[t._v("返回 302 临时重定向,地址栏显示重定向后 url,爬虫不会更新 url")])]),t._v(" "),n("tr",[n("td",[t._v("permant")]),t._v(" "),n("td",[t._v("返回 301 永久重定向,地址栏显示重定向后 url,爬虫更新 url")])])])]),t._v(" "),n("h2",{attrs:{id:"问题集"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题集"}},[t._v("#")]),t._v(" 问题集")]),t._v(" "),n("h3",{attrs:{id:"数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'a'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'b'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//abc")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h2",{attrs:{id:"nginx-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-2"}},[t._v("#")]),t._v(" nginx")]),t._v(" "),n("h3",{attrs:{id:"本地文件不存在访问远程文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#本地文件不存在访问远程文件"}},[t._v("#")]),t._v(" 本地文件不存在访问远程文件")]),t._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -e filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   rewrite\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("h3",{attrs:{id:"root-和-alias-区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#root-和-alias-区别"}},[t._v("#")]),t._v(" root 和 alias 区别")]),t._v(" "),n("p",[t._v("alias 别名,只显示文件名,隐藏路径.")]),t._v(" "),n("h2",{attrs:{id:"php-go"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#php-go"}},[t._v("#")]),t._v(" php + go")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/spiral/roadrunner",target:"_blank",rel:"noopener noreferrer"}},[t._v("roadrunner"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"static"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#static"}},[t._v("#")]),t._v(" static")]),t._v(" "),n("h2",{attrs:{id:"单例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#单例"}},[t._v("#")]),t._v(" 单例")])])}),[],!1,null,null,null);s.default=e.exports}}]);